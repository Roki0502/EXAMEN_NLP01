import streamlit as 
streamlit run app.py
from sentence_transformers import SentenceTransformer
import pandas as pd

# --- Donn√©es d'exemple ---
corpus = [
    "Le pr√©sident a tenu une conf√©rence sur la s√©curit√© nationale.",
    "La technologie des batteries lithium-ion avance rapidement.",
    "Le tournoi de football europ√©en d√©marre ce week-end.",
    "Les √©lections auront lieu en juin avec des enjeux majeurs.",
    "Les avanc√©es en intelligence artificielle transforment l'industrie."
]

# --- Nettoyage (l√©ger pour l'exemple) ---
corpus = [doc.strip() for doc in corpus if doc.strip()]

# --- Mod√®le d'embeddings multilingue ---
embedding_model = SentenceTransformer("paraphrase-multilingual-MiniLM-L12-v2")

# --- Initialisation du mod√®le BERTopic ---
topic_model = BERTopic(embedding_model=embedding_model, language="french")
topics, probs = topic_model.fit_transform(corpus)

# --- Interface Streamlit ---
st.title("üß≠ Exploration th√©matique avec BERTopic")

# Filtrage des topics valides (‚â† -1)
topics_valides = sorted([t for t in set(topics) if t != -1])

if topics_valides:
    topic_id = st.selectbox("S√©lectionnez un topic √† explorer :", topics_valides)

    # R√©cup√©ration des documents appartenant au topic
    doc_info = topic_model.get_document_info(corpus)
    docs_topic = doc_info[doc_info.Topic == topic_id]["Document"].tolist()

    st.subheader(f"üìå Documents du topic {topic_id}")
    for doc in docs_topic:
        st.write(f"‚Ä¢ {doc}")

    st.subheader("üîç Visualisation du topic")
    st.plotly_chart(topic_model.visualize_barchart(top_n_topics=len(topics_valides)))
else:
    st.warning("Aucun topic n'a √©t√© d√©tect√©. Veuillez augmenter la taille du corpus.")
